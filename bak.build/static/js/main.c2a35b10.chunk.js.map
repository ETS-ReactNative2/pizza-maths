{"version":3,"sources":["margherita.jpg","Components/InputForm.jsx","Components/PizzaCard.jsx","Components/PizzaCards.jsx","Components/App.js","Components/UpperLevel.js","serviceWorker.js","index.js"],"names":["module","exports","InputForm","props","handleInput","input","preventDefault","inchesVal","state","diameterInput","document","getElementById","instanceNumber","checked","pizzaId","nameInput","Date","getTime","newPizza","name","diameter","price","priceInput","quantity","key","updatePizzas","onSubmit","this","className","type","required","onChange","event","setState","target","value","id","min","htmlFor","step","label","Component","PizzaCard","roundedDiameter","addButtonClick","minusButtonClick","removeButtonClick","metricUnits","Number","toFixed","area","Math","PI","pow","circumference","onClick","PizzaCards","splitView","pizzas","addButton","minusButton","removeButton","map","pie","index","length","pizza","reduce","total","currentPizza","currentArea","App","handleRemove","e","confirm","filter","arrPizza","handleAdd","foundPizza","find","pizzaIndex","indexOf","newPizzas","handleMinus","handlePizzaInput","bind","some","obj","sideBySide","appInstance","React","UpperLevel","handleAddComparison","comparisonDiv","comparisonClass","splitViewClass","handleRemoveComparison","handleUnitConversion","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c2a35b10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/margherita.256757d0.jpg\";","import React, { Component } from \"react\";\nimport \"../styles/InputForm.css\";\n\nclass InputForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameInput: \"\",\n      diameterInput: \"\",\n      priceInput: null\n    };\n  }\n  handleInput = input => {\n    input.preventDefault();\n    let inchesVal = this.state.diameterInput;\n    if (document.getElementById(`cm${this.props.instanceNumber}`).checked) {\n      inchesVal = this.state.diameterInput / 2.54;\n    }\n    const pizzaId = this.state.nameInput + new Date().getTime();\n    const newPizza = {\n      name: this.state.nameInput,\n      diameter: inchesVal,\n      price: this.state.priceInput,\n      quantity: 1,\n      key: pizzaId,\n      pizzaId: pizzaId\n    };\n    this.props.updatePizzas(newPizza);\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleInput}>\n        <div className=\"input-texts\">\n          <div className=\"pizza-option\">\n            <div className=\"input-options\">\n              <p className=\"col\">Name</p>\n              <div className=\"col\">\n                <input\n                  className=\"col\"\n                  type=\"text\"\n                  required\n                  name=\"pizzaName\"\n                  onChange={event =>\n                    this.setState({ nameInput: event.target.value })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"pizza-option\">\n            <div className=\"input-options\">\n              <p className=\"col\">Diameter</p>\n\n              <div className=\"col\" id=\"diameter-and-units\">\n                <input\n                  type=\"number\"\n                  required\n                  name=\"diameter\"\n                  min=\"1\"\n                  onChange={event =>\n                    this.setState({ diameterInput: event.target.value })\n                  }\n                />\n                <input\n                  type=\"radio\"\n                  id={`in${this.props.instanceNumber}`}\n                  name=\"units\"\n                  value={`in${this.props.instanceNumber}`}\n                  required\n                  className=\"radio-button\"\n                />\n                <label htmlFor={`in${this.props.instanceNumber}`}>inches</label>\n                <input\n                  type=\"radio\"\n                  id={`cm${this.props.instanceNumber}`}\n                  name=\"units\"\n                  value={`cm${this.props.instanceNumber}`}\n                  required\n                  className=\"radio-button\"\n                />\n                <label htmlFor={`cm${this.props.instanceNumber}`}>cm</label>\n              </div>\n            </div>\n          </div>\n          <div className=\"pizza-option\">\n            <div className=\"input-options\">\n              <p className=\"col\">Price (£)</p>\n              <div className=\"col\">\n                <input\n                  className=\"col\"\n                  type=\"number\"\n                  required\n                  name=\"price\"\n                  step=\"0.01\"\n                  min=\"1\"\n                  onChange={event =>\n                    this.setState({ priceInput: event.target.value })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <button type=\"submit\" label=\"Submit\" className=\"submit-button\">\n          I'm hungry!\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default InputForm;\n","import React from \"react\";\nimport \"../styles/PizzaCard.css\";\nconst PizzaCard = ({\n  name,\n  diameter,\n  price,\n  quantity,\n  pizzaId,\n  addButtonClick,\n  minusButtonClick,\n  removeButtonClick,\n  metricUnits\n}) => {\n  let roundedDiameter;\n  if (diameter % 1 === 0) {\n    roundedDiameter = diameter;\n  } else {\n    roundedDiameter = Number(diameter).toFixed(1);\n  }\n  const area = Math.PI * Math.pow(diameter / 2, 2);\n  const circumference = Math.PI * diameter;\n  return (\n    <div className=\"PizzaCard\" key={pizzaId}>\n      <h4>Name: {name}</h4>\n      {metricUnits === false ? (\n        <h4>Diameter: {roundedDiameter} inches</h4>\n      ) : (\n        <h4>\n          Diameter:{\" \"}\n          {(diameter * 2.54) % 1 === 0\n            ? diameter * 2.54\n            : Number(diameter * 2.54).toFixed(1)}{\" \"}\n          cm\n        </h4>\n      )}\n      <h4>Price per pizza: £{Number(price).toFixed(2)}</h4>\n      <div className=\"quantity-buttons\">\n        <p>Quantity: {quantity}</p>\n        <button\n          type=\"button\"\n          className=\"add-button\"\n          onClick={() => addButtonClick(pizzaId)}\n        >\n          +\n        </button>\n        <button\n          type=\"button\"\n          className=\"minus-button\"\n          onClick={() => minusButtonClick(pizzaId)}\n        >\n          -\n        </button>\n        <button\n          type=\"button\"\n          className=\"remove-button\"\n          onClick={() => removeButtonClick(pizzaId)}\n        >\n          Remove\n        </button>\n      </div>\n\n      <h4>Total: £{Number(price * quantity).toFixed(2)}</h4>\n      {metricUnits === false ? (\n        <p>\n          Area: {(area * quantity).toFixed(2)} in<sup>2</sup>\n        </p>\n      ) : (\n        <p>\n          Area: {(area * quantity * 2.54 * 2.54).toFixed(2)} cm<sup>2</sup>\n        </p>\n      )}\n      {metricUnits === false ? (\n        <p>Crust: {(circumference * quantity).toFixed(2)} inches</p>\n      ) : (\n        <p>Crust: {(circumference * quantity * 2.54).toFixed(2)} cm</p>\n      )}\n      <p>\n        Area to crust (bigger means more area compared to crust):{\" \"}\n        {((area * quantity) / (circumference * quantity)).toFixed(2)}\n      </p>\n      {metricUnits === false ? (\n        <p>\n          Price per in<sup>2</sup>: {((Number(price) / area) * 100).toFixed(2)}p\n        </p>\n      ) : (\n        <p>\n          Price per cm<sup>2</sup>:\n          {(Number(price / (area * 2.54 * 2.54)) * 100).toFixed(2)}p\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default PizzaCard;\n","import React, { Component } from \"react\";\n\nimport PizzaCard from \"./PizzaCard\";\nimport \"../styles/PizzaCards.css\";\n\nconst PizzaCards = ({\n  splitView,\n  pizzas,\n  addButton,\n  minusButton,\n  removeButton,\n  metricUnits\n}) => {\n  return (\n    <div className=\"pizza-cards-container\">\n      <div className={`all-pizzas ${splitView}`}>\n        {pizzas.map((pie, index) => {\n          return (\n            <PizzaCard\n              {...pie}\n              pizzaId={pie.pizzaId}\n              addButtonClick={addButton}\n              minusButtonClick={minusButton}\n              removeButtonClick={removeButton}\n              metricUnits={metricUnits}\n            />\n          );\n        })}\n      </div>\n      <div className=\"total-values\">\n        {pizzas.length > 0 && (\n          <div>\n            <h2>\n              Total: £\n              {pizzas\n                .map(pizza => pizza.price * pizza.quantity)\n                .reduce((total, currentPizza) => total + currentPizza)\n                .toFixed(2)}\n            </h2>\n\n            {metricUnits === false ? (\n              <h2>\n                Total area:{\" \"}\n                {pizzas\n                  .map(\n                    pizza =>\n                      Math.PI * Math.pow(pizza.diameter / 2, 2) * pizza.quantity\n                  )\n                  .reduce((total, currentArea) => total + currentArea)\n                  .toFixed(2)}{\" \"}\n                in<sup>2</sup>\n              </h2>\n            ) : (\n              <h2>\n                Total area:{\" \"}\n                {(\n                  pizzas\n                    .map(\n                      pizza =>\n                        Math.PI *\n                        Math.pow(pizza.diameter / 2, 2) *\n                        pizza.quantity\n                    )\n                    .reduce((total, currentArea) => total + currentArea) *\n                  2.54 *\n                  2.54\n                ).toFixed(2)}{\" \"}\n                cm<sup>2</sup>\n              </h2>\n            )}\n            {metricUnits === false ? (\n              <h2>\n                Total price per in<sup>2</sup>:{\" \"}\n                {(\n                  (pizzas\n                    .map(pizza => pizza.price * pizza.quantity)\n                    .reduce((total, currentPizza) => total + currentPizza) /\n                    pizzas\n                      .map(\n                        pizza =>\n                          Math.PI *\n                          Math.pow(pizza.diameter / 2, 2) *\n                          pizza.quantity\n                      )\n                      .reduce((total, currentArea) => total + currentArea)) *\n                  100\n                ).toFixed(2)}\n                p\n              </h2>\n            ) : (\n              <h2>\n                Total price per cm<sup>2</sup>:{\" \"}\n                {(\n                  (pizzas\n                    .map(pizza => pizza.price * pizza.quantity)\n                    .reduce((total, currentPizza) => total + currentPizza) /\n                    (pizzas\n                      .map(\n                        pizza =>\n                          Math.PI *\n                          Math.pow(pizza.diameter / 2, 2) *\n                          pizza.quantity\n                      )\n                      .reduce((total, currentArea) => total + currentArea) *\n                      2.54 *\n                      2.54)) *\n                  100\n                ).toFixed(2)}\n                p\n              </h2>\n            )}\n            <h2>\n              Total area to crust ratio:{\" \"}\n              {(\n                pizzas\n                  .map(\n                    pizza =>\n                      Math.PI * Math.pow(pizza.diameter / 2, 2) * pizza.quantity\n                  )\n                  .reduce((total, currentArea) => total + currentArea) /\n                pizzas\n                  .map(pizza => Math.PI * pizza.diameter * pizza.quantity)\n                  .reduce((total, currentPizza) => total + currentPizza)\n              ).toFixed(2)}\n            </h2>\n          </div>\n        )}\n\n        {pizzas.length === 0 && <h1>Add some pizzas!</h1>}\n      </div>\n    </div>\n  );\n};\n\nexport default PizzaCards;\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport \"./InputForm\";\nimport InputForm from \"./InputForm\";\nimport PizzaCards from \"./PizzaCards\";\n/* eslint no-restricted-globals:0 */\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pizzas: [\n        {\n          name: \"Test guy\",\n          diameter: 12,\n          price: 7,\n          key: \"Test guy 0\",\n          pizzaId: \"test id\",\n          quantity: 2\n        }\n      ]\n    };\n    this.handlePizzaInput = this.handlePizzaInput.bind(this);\n  }\n\n  handlePizzaInput(e) {\n    if (\n      !this.state.pizzas.some(\n        obj =>\n          obj.name === e.name && Number(obj.diameter) === Number(e.diameter)\n      )\n    ) {\n      this.setState({ pizzas: [...this.state.pizzas, e] });\n    }\n  }\n\n  handleRemove = e => {\n    if (confirm(\"Are you completely sure you want to remove this pizza?\")) {\n      this.setState({\n        pizzas: this.state.pizzas.filter(arrPizza => arrPizza.pizzaId !== e)\n      });\n    } else {\n    }\n  };\n\n  handleAdd = e => {\n    let foundPizza = this.state.pizzas.find(arrPizza => arrPizza.pizzaId === e);\n    let pizzaIndex = this.state.pizzas.indexOf(foundPizza);\n    foundPizza.quantity += 1;\n    const newPizzas = [...this.state.pizzas];\n    newPizzas[pizzaIndex] = foundPizza;\n    this.setState({ pizzas: newPizzas });\n  };\n\n  handleMinus = e => {\n    let foundPizza = this.state.pizzas.find(arrPizza => arrPizza.pizzaId === e);\n    let pizzaIndex = this.state.pizzas.indexOf(foundPizza);\n    if (foundPizza.quantity > 1) {\n      foundPizza.quantity -= 1;\n      const newPizzas = [...this.state.pizzas];\n      newPizzas[pizzaIndex] = foundPizza;\n      this.setState({ pizzas: newPizzas });\n    }\n  };\n\n  render() {\n    const { sideBySide, metricUnits } = this.props;\n    return (\n      <div className=\"App\">\n        <InputForm\n          updatePizzas={this.handlePizzaInput}\n          pizzas={this.state.pizzas}\n          instanceNumber={this.props.appInstance}\n        />\n        <PizzaCards\n          pizzas={this.state.pizzas}\n          addButton={this.handleAdd}\n          removeButton={this.handleRemove}\n          minusButton={this.handleMinus}\n          splitView={sideBySide}\n          metricUnits={metricUnits}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from \"./App\";\nimport \"../styles/UpperLevel.css\";\nimport background from \"../margherita.jpg\";\n\nimport React, { Component } from \"react\";\n\nclass UpperLevel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comparisonDiv: false,\n      comparisonClass: \"\",\n      splitView: \"\",\n      metricUnits: false\n    };\n  }\n\n  handleAddComparison = event => {\n    this.setState({\n      comparisonDiv: true,\n      comparisonClass: \"side-by-side-comparison\",\n      splitViewClass: \"split-view\"\n    });\n  };\n\n  handleRemoveComparison = event => {\n    this.setState({\n      comparisonDiv: false,\n      comparisonClass: \"\",\n      splitViewClass: \"\"\n    });\n  };\n\n  handleUnitConversion = event => {\n    this.setState({ metricUnits: !this.state.metricUnits });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"upper-level\">\n          <header className=\"App-header\">\n            <h1>Pizzarithmetic</h1>\n            <h3>...best thing since sliced bread(pizza)</h3>\n            <p>Add some pizza details below and compare for the best value</p>\n          </header>\n\n          {this.state.comparisonDiv === false && (\n            <button\n              type=\"button\"\n              onClick={this.handleAddComparison}\n              className=\"top-level-button\"\n            >\n              Add comparison\n            </button>\n          )}\n          {this.state.comparisonDiv === true && (\n            <button\n              type=\"button\"\n              onClick={this.handleRemoveComparison}\n              className=\"top-level-button\"\n            >\n              Remove second comparison\n            </button>\n          )}\n          <button\n            type=\"button\"\n            onClick={this.handleUnitConversion}\n            className=\"top-level-button\"\n          >\n            Change values to {this.state.metricUnits === true && \"cm\"}\n            {this.state.metricUnits === false && \"inches\"}\n          </button>\n          <span className=\"apps\">\n            <App\n              className={this.state.comparisonClass}\n              sideBySide={this.state.splitViewClass}\n              metricUnits={this.state.metricUnits}\n              appInstance={\"0\"}\n            />\n            {this.state.comparisonDiv && (\n              <App\n                className={this.state.splitViewClass}\n                sideBySide={this.state.splitViewClass}\n                metricUnits={this.state.metricUnits}\n                appInstance={\"1\"}\n              />\n            )}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UpperLevel;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport UpperLevel from \"./Components/UpperLevel\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<UpperLevel />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}